// Generated by CoffeeScript 2.5.1
(function() {
  'use strict';
  var e;

  angular.module('vs-maintenance-leads', ['ndx', 'ui.router', 'ngFileUpload', 'ui.gravatar', 'ng-sumoselect', 'maintenance-leads-date-swiper']).config(function($locationProvider, $urlRouterProvider, gravatarServiceProvider) {
    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);
    return gravatarServiceProvider.defaults = {
      size: 16,
      "default": 'mm',
      rating: 'pg'
    };
  }).run(function($rootScope, $transitions, TaskPopup, alert, socket, $http) {
    $rootScope.makeDownloadUrl = function(document) {
      if (document) {
        return $http.sites["maintenance_leads"].url + '/api/download/' + btoa(JSON.stringify({
          path: document.path,
          filename: document.originalFilename
        }));
      }
    };
    $rootScope.medium = 'dd/MM/yyyy @ HH:mm';
    $transitions.onBefore({}, function(trans) {
      if (!TaskPopup.getHidden()) {
        TaskPopup.hide();
        return TaskPopup.cancelBubble = true;
      }
    });
    $rootScope.bodyTap = function(e) {
      var elm, isPopup;
      $rootScope.mobileMenuOut = false;
      elm = e.target;
      isPopup = false;
      while (elm && elm.tagName !== 'BODY') {
        if (elm.className === 'popup') {
          isPopup = true;
          break;
        }
        elm = elm.parentNode;
      }
      if (!isPopup) {
        if (!TaskPopup.getHidden()) {
          TaskPopup.hide();
          return TaskPopup.cancelBubble = true;
        }
      }
    };
    if (false && socket) {
      socket.on('newIssue', function(issue) {
        return alert.log('<i class="fad fa-house-damage"></i><h3>' + issue.address + '</h3><p>' + issue.title + '</p>');
      });
      return socket.on('newMessage', function(message) {
        return alert.log('<i class="fad fa-house-damage"></i><h3>' + message.address + '</h3><h4>' + message.from + '</h4><p>' + message.subject + '</p>');
      });
    }
  });

  try {
    angular.module('ndx');
  } catch (error) {
    e = error;
    angular.module('ndx', []); //ndx module stub
  }

}).call(this);
