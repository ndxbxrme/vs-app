// Generated by CoffeeScript 2.5.1
(function() {
  'use strict';
  angular.module('ndx').factory('FileUtils', function(Upload) {
    var put;
    put = function(object, path, value) {
      var key;
      if (typeof path === 'string') {
        path = path.split('.');
      }
      if (!(path instanceof Array) || path.length === 0) {
        return false;
      }
      path = path.slice();
      key = path.shift();
      if (typeof object !== 'object' || object === null) {
        return false;
      }
      if (path.length === 0) {
        return object[key] = value;
      } else {
        if (!object[key]) {
          object[key] = {};
        }
        if (typeof object[key] !== 'object' || object[key] === null) {
          return false;
        }
        return put(object[key], path, value);
      }
    };
    return {
      uploadFn: function($scope, errFn) {
        return function(path, files, errFiles) {
          var type;
          $scope.uploading = true;
          if (errFiles && errFiles.length) {
            $scope.uploading = false;
            if (typeof errFn === "function") {
              errFn(errFiles);
            }
            return;
          }
          type = Object.prototype.toString.call(files);
          if (files && ((type === '[object Array]' && files.length) || (type === '[object File]'))) {
            return Upload.upload({
              url: '/lettings/api/upload',
              data: {
                file: files
              }
            }, $http.sites["lettings"].config).then(function(response) {
              var document, i, len, ref, results;
              $scope.uploading = false;
              if (response.data) {
                ref = response.data;
                results = [];
                for (i = 0, len = ref.length; i < len; i++) {
                  document = ref[i];
                  results.push(put($scope, path, document));
                }
                return results;
              }
            }, function(err) {
              $scope.uploading = false;
              return false;
            }, function(progress) {
              return $scope.uploadProgress = Math.min(100, parseInt(100.0 * progress.loaded / progress.total));
            });
          } else {
            return $scope.uploading = false;
          }
        };
      }
    };
  });

}).call(this);
