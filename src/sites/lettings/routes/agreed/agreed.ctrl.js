// Generated by CoffeeScript 2.5.1
(function() {
  'use strict';
  angular.module('vs-lettings-inner').controller('lettingsAgreedCtrl', function($scope, $filter, $timeout, $http) {
    var updateMonths, updateProperties, updateTargets, y;
    $scope.now = new Date().valueOf();
    $scope.years = [];
    y = new Date().getFullYear() + 1;
    while (y-- > 2017) {
      $scope.years.push(y);
    }
    updateMonths = function() {
      var month, results, testDate;
      return;
      $scope.months = [];
      testDate = new Date($scope.startDate['startDate']);
      results = [];
      while (testDate < $scope.endDate['startDate']) {
        month = {
          date: testDate,
          month: $filter('date')(testDate, 'MMMM'),
          properties: [],
          target: {
            type: 'letAgreed',
            value: 0,
            date: testDate
          },
          search: ''
        };
        $scope.months.push(month);
        results.push(testDate = new Date(testDate.getFullYear(), testDate.getMonth() + 1, testDate.getDate()));
      }
      return results;
    };
    $scope.startDate = {
      startDate: 0
    };
    $scope.endDate = {
      startDate: 0
    };
    $scope.setDateRange = function(year) {
      $scope.currentYear = year;
      return $timeout(function() {
        $scope.startDate.startDate = new Date(year, 0, 1).valueOf();
        $scope.endDate.startDate = new Date(year + 1, 0, 1).valueOf();
        updateMonths();
        return updateProperties();
      });
    };
    $scope.setDateRange($scope.years[0]);
    updateTargets = function() {
      var i, len, month, ref, results, target;
      if ($scope.targets && $scope.targets.items && $scope.targets.items.length) {
        ref = $scope.targets.items;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          target = ref[i];
          results.push((function() {
            var j, len1, ref1, results1;
            ref1 = $scope.months;
            results1 = [];
            for (j = 0, len1 = ref1.length; j < len1; j++) {
              month = ref1[j];
              if (new Date(target.date).toLocaleString() === month.date.toLocaleString()) {
                month.target = target;
                break;
              } else {
                results1.push(void 0);
              }
            }
            return results1;
          })());
        }
        return results;
      }
    };
    updateProperties = async function() {
      var res;
      res = (await $http.post($http.sites["lettings"].url + "/api/agreed/search", {
        startDate: $scope.startDate.startDate,
        endDate: $scope.endDate.startDate
      }, $http.sites["lettings"].config));
      return $timeout(function() {
        $scope.months = res.data;
        return $scope.months.forEach(function(month) {
          return month.month = $filter('date')(month.date, 'MMMM');
        });
      });
    };
    $scope.targets = $scope.list('lettings:targets', {
      where: {
        type: 'salesAgreed'
      }
    }, updateTargets);
    $scope.properties = $scope.list('lettings:properties', {
      sort: 'proposedMoving',
      sortDir: 'ASC',
      pageSize: 1
    }, function() {
      return updateProperties();
    });
    $scope.open = function(selectedMonth) {
      var i, len, month, open, ref;
      open = selectedMonth.open;
      ref = $scope.months;
      for (i = 0, len = ref.length; i < len; i++) {
        month = ref[i];
        month.open = false;
      }
      return selectedMonth.open = !open;
    };
    $scope.edit = function(property) {
      if (!property.$override) {
        property.$override = {
          address: property.address,
          commission: property.commission,
          date: property.date
        };
      }
      return $timeout(function() {
        return property.$editing = true;
      });
    };
    $scope.delete = function(property) {
      return $http.post($http.sites["lettings"].url + `/api/properties/${property._id}`, {
        override: {
          deleted: true
        }
      }, $http.sites.lettings.config);
    };
    $scope.save = function(property) {
      return $http.post($http.sites["lettings"].url + `/api/properties/${property._id}`, {
        override: property.$override
      }, $http.sites.lettings.config);
    };
    $scope.cancel = function(property) {
      return property.$editing = false;
    };
    return $scope.saveTarget = function(month) {
      $http.post($http.sites["lettings"].url + `/api/targets/${month.target._id || ''}`, month.target, $http.sites.lettings.config);
      return month.editing = false;
    };
  });

}).call(this);
