// Generated by CoffeeScript 2.5.1
(function() {
  'use strict';
  angular.module('vs-maintenance').factory('maintenanceProperty', function($http, env) {
    var fetchProperties, properties;
    properties = [];
    fetchProperties = function() {
      return async.parallel([
        function(callback) {
          return callback(null,
        [
            {
              RoleId: 'vitalspace-office',
              displayAddress: 'Vitalspace Office',
              Address: {
                Street: 0
              }
            }
          ]);
        },
        function(callback) {
          return $http({
            method: 'POST',
            url: `${env.PROPERTY_URL}/search`,
            headers: {
              Authorization: `Bearer ${env.PROPERTY_TOKEN}`
            },
            data: {
              IncludeStc: true,
              RoleType: 'Letting'
            }
          }, $http.sites["maintenance"].config).then(function(response) {
            return callback(null,
        response.data.Collection);
          },
        function(err) {
            return callback(err);
          });
        }
      ], function(err, results) {
        var i, len, props, results1;
        if (!err) {
          properties = [];
          results1 = [];
          for (i = 0, len = results.length; i < len; i++) {
            props = results[i];
            results1.push(properties = properties.concat(props));
          }
          return results1;
        }
      });
    };
    return {
      fetchProperties: fetchProperties,
      getProperties: function() {
        return properties;
      },
      getProperty: function(roleId) {
        var i, len, property;
        for (i = 0, len = properties.length; i < len; i++) {
          property = properties[i];
          if (property.RoleId.toString() === roleId) {
            return property;
          }
        }
        return null;
      }
    };
  }).run(function(maintenanceProperty) {
    return maintenanceProperty.fetchProperties();
  });

}).call(this);
